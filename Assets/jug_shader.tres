[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://b5jh3qbc03gye"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_rjpa4"]
output_port_for_preview = 0
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_rjpa4"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_n0tr3"]
input_name = "uv"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D tex_frg_3;



void fragment() {
// Input:4
	vec2 n_out4p0 = UV;


// Texture2D:3
	vec4 n_out3p0 = texture(tex_frg_3, n_out4p0);


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);


}
"
graph_offset = Vector2(-245.254, -84.2278)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_rjpa4")
nodes/fragment/2/position = Vector2(-480, 300)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_rjpa4")
nodes/fragment/3/position = Vector2(-80, 100)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_n0tr3")
nodes/fragment/4/position = Vector2(-500, 200)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 0, 0, 4, 0, 3, 0)
