[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://b5jh3qbc03gye"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_n0tr3"]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture2DArray" id="VisualShaderNodeTexture2DArray_rjpa4"]
expanded_output_ports = [0]
source = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_n0tr3"]
parameter_name = "Texture2DParameter"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Texture2DParameter;



void fragment() {
// Input:4
	vec2 n_out4p0 = UV;


	vec4 n_out5p0;
// Texture2DArray:5
	n_out5p0 = texture(Texture2DParameter, vec3(n_out4p0, 0.0));


// Output:0
	COLOR.rgb = vec3(n_out5p0.xyz);


}
"
graph_offset = Vector2(-111.43, -8.75412)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(580, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_n0tr3")
nodes/fragment/4/position = Vector2(-520, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeTexture2DArray_rjpa4")
nodes/fragment/5/position = Vector2(-160, 160)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture2DParameter_n0tr3")
nodes/fragment/6/position = Vector2(-600, 360)
nodes/fragment/connections = PackedInt32Array(4, 0, 5, 0, 6, 0, 5, 2, 5, 0, 0, 0)
